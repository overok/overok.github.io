import{_ as p,r as t,o as e,c as o,b as n,d as c,e as l,a as s}from"./app-dc634640.js";const i={},r=s(`<h1 id="vue3-语法" tabindex="-1"><a class="header-anchor" href="#vue3-语法" aria-hidden="true">#</a> Vue3 语法</h1><h2 id="setup" tabindex="-1"><a class="header-anchor" href="#setup" aria-hidden="true">#</a> setup</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>在 template 中不再需要一个根元素包裹<span class="token punctuation">,</span>实际上内部会将多个标签包含在一个Fragment虚拟元素中<span class="token punctuation">,</span>setup 是 Composition <span class="token constant">API</span>的入口
<span class="token comment">//setup 执行顺序</span>
它在beforeCreate之前执行一次，beforeCreate这个钩子 的任务就是初始化，在它之前执行，那么 <span class="token keyword">this</span> 就没有被初始化 <span class="token keyword">this</span> <span class="token operator">=</span> <span class="token keyword">undefined</span> 这样就不能通过 <span class="token keyword">this</span> 来调用方法 和 获取属性
<span class="token comment">//setup 返回值</span>
setup 返回的是一个对象，这个对象的属性会与组件中 data 函数返回的对象进行合并，返回的方法和 methods 合并，合并之后直接可以在模板中使用
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="vue3-红色报错" tabindex="-1"><a class="header-anchor" href="#vue3-红色报错" aria-hidden="true">#</a> vue3 红色报错</h2><p>以上错误主要是因为，在 vue3 项目 ts 写法报错组件没有默认导出，Vetur 不支持 vue3 版本，需要下载 Vue Language Features (Volar)，安装后报错问题得到解决（记得要重启 vscode）</p><h2 id="ref" tabindex="-1"><a class="header-anchor" href="#ref" aria-hidden="true">#</a> ref</h2><ul><li>ref: 接受一个内部值并返回一个响应式且可变的 ref 对象,注意被 ref 包装之后需要.value 来进行赋值</li><li>isRef: 判断是不是一个 ref 对象 isRef(***);</li><li>reactive: 数组异步赋值问题.直接赋值页面是不会变化的应为会脱离响应式,1.可以用 push 等函数方法增减.2.可以在数组外包一个对象</li><li>readonly: 只读属性 const copy = readonly(person) 不能修改其值</li><li>toRef: 如果原始对象是非响应式的就不会更新视图,数据是会变的,如果原始对象是响应式的是会更新视图并且改变数据的</li><li>toRefs : 可以帮我们批量创建 ref 对象主要是方便我们解构使用 <code>const obj = reactive({ foo: 1, bar: 1 }) let { foo, bar } = toRefs(obj)</code></li></ul><h2 id="computed" tabindex="-1"><a class="header-anchor" href="#computed" aria-hidden="true">#</a> computed</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token number">1</span><span class="token punctuation">.</span>let firstName <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> firstName<span class="token punctuation">.</span>value <span class="token operator">++</span><span class="token number">1</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token number">2</span><span class="token punctuation">.</span>let price <span class="token operator">=</span> ref<span class="token operator">&lt;</span>number <span class="token operator">|</span> string<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">//$0</span>
<span class="token keyword">let</span> mul <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
   <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> price<span class="token punctuation">.</span>value
   <span class="token punctuation">}</span><span class="token punctuation">,</span>
   <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      price<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;set&#39;</span> <span class="token operator">+</span> value
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="watch" tabindex="-1"><a class="header-anchor" href="#watch" aria-hidden="true">#</a> watch</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> message <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
<span class="token function">watch</span><span class="token punctuation">(</span>
  message<span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token parameter">newVal<span class="token punctuation">,</span> oldVal</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;新的值----&#39;</span><span class="token punctuation">,</span> newVal<span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;旧的值----&#39;</span><span class="token punctuation">,</span> oldVal<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">immediate</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//是否立即调用一次</span>
    <span class="token literal-property property">deep</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//是否开启深度监听 ref需要加，reactive则不需要</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span>
<span class="token comment">//监听多个值</span>
<span class="token function">watch</span><span class="token punctuation">(</span><span class="token punctuation">[</span>message<span class="token punctuation">,</span> message2<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">newVal<span class="token punctuation">,</span> oldVal</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;新的值----&#39;</span><span class="token punctuation">,</span> newVal<span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;旧的值----&#39;</span><span class="token punctuation">,</span> oldVal<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">//监听reactive 单一值</span>
<span class="token keyword">let</span> message <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">name2</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token function">watch</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> message<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token parameter">newVal<span class="token punctuation">,</span> oldVal</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;新的值----&#39;</span><span class="token punctuation">,</span> newVal<span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;旧的值----&#39;</span><span class="token punctuation">,</span> oldVal<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="vue-组件通信" tabindex="-1"><a class="header-anchor" href="#vue-组件通信" aria-hidden="true">#</a> Vue 组件通信</h2>`,12),u={href:"https://juejin.cn/post/7090908751439331342",target:"_blank",rel:"noopener noreferrer"},k=s(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//全局组件</span>
<span class="token comment">//在main.ts 引入我们的组件，直接在其他vue页面 立即使用即可 无需引入。&lt;Card&gt;&lt;/Card&gt;</span>
<span class="token keyword">import</span> Card <span class="token keyword">from</span> <span class="token string">&#39;./components/Card/index.vue&#39;</span>
<span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;Card&#39;</span><span class="token punctuation">,</span> Card<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span>

<span class="token comment">//动态组件：让多个组件使用同一个挂载点，并动态切换，这就是动态组件。</span>
<span class="token keyword">import</span> <span class="token constant">A</span> <span class="token keyword">from</span> <span class="token string">&#39;./A.vue&#39;</span>
<span class="token keyword">import</span> <span class="token constant">B</span> <span class="token keyword">from</span> <span class="token string">&#39;./B.vue&#39;</span>
<span class="token comment">// &lt;component :is=&quot;A&quot;&gt;&lt;/component&gt; 通过is切换A,B组件,使用场景tab切换</span>
<span class="token keyword">const</span> tab <span class="token operator">=</span> reactive<span class="token operator">&lt;</span>Com<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;A组件&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">comName</span><span class="token operator">:</span> <span class="token function">markRaw</span><span class="token punctuation">(</span><span class="token constant">A</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;B组件&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">comName</span><span class="token operator">:</span> <span class="token function">markRaw</span><span class="token punctuation">(</span><span class="token constant">B</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="语法糖" tabindex="-1"><a class="header-anchor" href="#语法糖" aria-hidden="true">#</a> 语法糖</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//json to ts 插件,使用方法:ctrl+shift+alt+s(自动定义数据类型)</span>
<span class="token operator">:</span><span class="token function">deep</span><span class="token punctuation">(</span><span class="token parameter">input</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token operator">==</span><span class="token operator">/</span>deep<span class="token operator">/</span>input
<span class="token operator">:</span><span class="token operator">:</span>v<span class="token operator">-</span>deep <span class="token operator">&gt;&gt;&gt;</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">deep</span><span class="token regex-delimiter">/</span></span>
<span class="token comment">//封装Loading</span>
<span class="token literal-property property">https</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>blog<span class="token punctuation">.</span>csdn<span class="token punctuation">.</span>net<span class="token operator">/</span>qq1195566313<span class="token operator">/</span>article<span class="token operator">/</span>details<span class="token operator">/</span><span class="token number">123300264</span>

<span class="token comment">//父组件引用子组件 通过defineAsyncComponent加载异步配合import 函数模式便可以分包</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> reactive<span class="token punctuation">,</span> ref<span class="token punctuation">,</span> markRaw<span class="token punctuation">,</span> toRaw<span class="token punctuation">,</span> defineAsyncComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">const</span> Dialog <span class="token operator">=</span> <span class="token function">defineAsyncComponent</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;../../components/Dialog/index.vue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="teleport-传送组件" tabindex="-1"><a class="header-anchor" href="#teleport-传送组件" aria-hidden="true">#</a> Teleport 传送组件</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//通过to 属性 插入指定元素位置 to=&quot;body&quot; 便可以将Teleport 内容传送到指定位置</span>
<span class="token operator">&lt;</span>Teleport to<span class="token operator">=</span><span class="token string">&quot;body&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>Loading<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>Loading<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>Teleport<span class="token operator">&gt;</span>
<span class="token comment">//也可以自定义传送位置 支持 class id等 选择器</span>
 <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;modal&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span>Teleport to<span class="token operator">=</span><span class="token string">&quot;.modal&quot;</span><span class="token operator">&gt;</span>
   <span class="token operator">&lt;</span>Loading<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>Loading<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>Teleport<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="动画" tabindex="-1"><a class="header-anchor" href="#动画" aria-hidden="true">#</a> 动画</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>transition name<span class="token operator">=</span><span class="token string">&#39;fade&#39;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>div v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">&#39;flag&#39;</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;box&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>transition<span class="token operator">&gt;</span>
<span class="token comment">//开始过度</span>
<span class="token punctuation">.</span>fade<span class="token operator">-</span>enter<span class="token operator">-</span>from<span class="token punctuation">{</span>
   <span class="token literal-property property">background</span><span class="token operator">:</span>red<span class="token punctuation">;</span>
   <span class="token literal-property property">width</span><span class="token operator">:</span>0px<span class="token punctuation">;</span>
   <span class="token literal-property property">height</span><span class="token operator">:</span>0px<span class="token punctuation">;</span>
   <span class="token literal-property property">transform</span><span class="token operator">:</span><span class="token function">rotate</span><span class="token punctuation">(</span>360deg<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">//开始过度了</span>
<span class="token punctuation">.</span>fade<span class="token operator">-</span>enter<span class="token operator">-</span>active<span class="token punctuation">{</span>
  <span class="token literal-property property">transition</span><span class="token operator">:</span> all <span class="token number">2</span><span class="token punctuation">.</span>5s linear<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//过度完成</span>
<span class="token punctuation">.</span>fade<span class="token operator">-</span>enter<span class="token operator">-</span>to<span class="token punctuation">{</span>
   <span class="token literal-property property">background</span><span class="token operator">:</span>yellow<span class="token punctuation">;</span>
   <span class="token literal-property property">width</span><span class="token operator">:</span>200px<span class="token punctuation">;</span>
   <span class="token literal-property property">height</span><span class="token operator">:</span>200px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//离开的过度</span>
<span class="token punctuation">.</span>fade<span class="token operator">-</span>leave<span class="token operator">-</span>from<span class="token punctuation">{</span>
  <span class="token literal-property property">width</span><span class="token operator">:</span>200px<span class="token punctuation">;</span>
  <span class="token literal-property property">height</span><span class="token operator">:</span>200px<span class="token punctuation">;</span>
  <span class="token literal-property property">transform</span><span class="token operator">:</span><span class="token function">rotate</span><span class="token punctuation">(</span>360deg<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">//离开中过度</span>
<span class="token punctuation">.</span>fade<span class="token operator">-</span>leave<span class="token operator">-</span>active<span class="token punctuation">{</span>
  <span class="token literal-property property">transition</span><span class="token operator">:</span> all 1s linear<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//离开完成</span>
<span class="token punctuation">.</span>fade<span class="token operator">-</span>leave<span class="token operator">-</span>to<span class="token punctuation">{</span>
  <span class="token literal-property property">width</span><span class="token operator">:</span>0px<span class="token punctuation">;</span>
   <span class="token literal-property property">height</span><span class="token operator">:</span>0px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//通过自定义class 结合css动画库animate css</span>
<span class="token comment">//安装库 npm install animate.css,引入 import &#39;animate.css&#39;</span>
<span class="token operator">&lt;</span>transition
    leave<span class="token operator">-</span>active<span class="token operator">-</span><span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;animate__animated animate__bounceInLeft&quot;</span>
    enter<span class="token operator">-</span>active<span class="token operator">-</span><span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;animate__animated animate__bounceInRight&quot;</span>
<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>transition<span class="token operator">&gt;</span>
<span class="token comment">//transition-group过度列表每个元素</span>
<span class="token literal-property property">https</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>blog<span class="token punctuation">.</span>csdn<span class="token punctuation">.</span>net<span class="token operator">/</span>qq1195566313<span class="token operator">/</span>article<span class="token operator">/</span>details<span class="token operator">/</span><span class="token number">123058884</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="路由功能传参" tabindex="-1"><a class="header-anchor" href="#路由功能传参" aria-hidden="true">#</a> 路由功能传参</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//replace:history中其不会重复保存记录</span>
<span class="token operator">&lt;</span>router<span class="token operator">-</span>link replace to<span class="token operator">=</span><span class="token string">&quot;/&quot;</span><span class="token operator">&gt;</span>Login<span class="token operator">&lt;</span><span class="token operator">/</span>router<span class="token operator">-</span>link<span class="token operator">&gt;</span>
<span class="token keyword">const</span> <span class="token function-variable function">toPage</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">url</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  router<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">//Query路由传参</span>
router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/reg&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">query</span><span class="token operator">:</span> item
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">//Params路由传参</span>
router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Reg&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">params</span><span class="token operator">:</span> item
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">//接受参数</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useRoute <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-router&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> route <span class="token operator">=</span> <span class="token function">useRoute</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>品牌：<span class="token punctuation">{</span><span class="token punctuation">{</span> route<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token operator">?.</span>name <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token comment">//Query和Params路由传参区别:query 传参配置的是 path，而 params 传参配置的是name</span>
<span class="token comment">//query 在路由配置不需要设置参数，而 params 必须设置</span>
<span class="token comment">//query 传递的参数会显示在地址栏中</span>
<span class="token comment">//params传参刷新会无效，但是 query 会保存传递过来的值，刷新不变 ;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="重定向-redirect" tabindex="-1"><a class="header-anchor" href="#重定向-redirect" aria-hidden="true">#</a> 重定向 redirect</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token literal-property property">routes</span><span class="token operator">:</span> Array<span class="token operator">&lt;</span>RouteRecordRaw<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span>
        <span class="token function-variable function">component</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;../components/root.vue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token literal-property property">alias</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&quot;/root&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;/root2&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;/root3&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">//路由别名,多个名字</span>
        <span class="token number">1</span><span class="token punctuation">.</span>redirect<span class="token operator">:</span><span class="token string">&#39;/user1&#39;</span><span class="token punctuation">,</span>
        <span class="token number">2</span><span class="token punctuation">.</span>redirect<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/user1&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token number">3.</span><span class="token function-variable function">redirect</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">to</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/user1&#39;</span><span class="token punctuation">,</span>
                <span class="token literal-property property">query</span><span class="token operator">:</span> to<span class="token punctuation">.</span>query
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">children</span><span class="token operator">:</span><span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
                <span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">&#39;/user1&#39;</span><span class="token punctuation">,</span>
                <span class="token literal-property property">components</span><span class="token operator">:</span><span class="token punctuation">{</span>
                    <span class="token function-variable function">default</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;../components/A.vue&#39;</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span>
                <span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">&#39;/user2&#39;</span><span class="token punctuation">,</span>
                <span class="token literal-property property">components</span><span class="token operator">:</span><span class="token punctuation">{</span>
                    <span class="token function-variable function">bbb</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;../components/B.vue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    <span class="token function-variable function">ccc</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;../components/C.vue&#39;</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="导航守卫" tabindex="-1"><a class="header-anchor" href="#导航守卫" aria-hidden="true">#</a> 导航守卫</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//全局前置守卫</span>
<span class="token comment">//to: Route， 即将要进入的目标 路由对象；from: Route，当前导航正要离开的路由；next(): 进行管道中的下一个钩子。</span>
<span class="token keyword">const</span> whileList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">]</span>
router<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> token <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;token&#39;</span><span class="token punctuation">)</span>
  <span class="token comment">//白名单 有值 或者登陆过存储了token信息可以跳转 否则就去登录页面</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>whileList<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>to<span class="token punctuation">.</span>path<span class="token punctuation">)</span> <span class="token operator">||</span> token<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">//页面加载顶部进度条</span>
<span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token string">&#39;https:blog.csdn.net/qq1195566313/article/details/123699583&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="动态添加路由" tabindex="-1"><a class="header-anchor" href="#动态添加路由" aria-hidden="true">#</a> 动态添加路由</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//添加路由</span>
<span class="token comment">//vite在使用动态路由的时候无法使用别名@ 必须使用相对路径</span>
router<span class="token punctuation">.</span><span class="token function">addRoute</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/about&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;about&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">component</span><span class="token operator">:</span> About <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">//接口</span>
<span class="token keyword">const</span> <span class="token function-variable function">initRouter</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;http://localhost:9999/login&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">params</span><span class="token operator">:</span> formInline<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  result<span class="token punctuation">.</span>data<span class="token punctuation">.</span>route<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">v</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    router<span class="token punctuation">.</span><span class="token function">addRoute</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">path</span><span class="token operator">:</span> v<span class="token punctuation">.</span>path<span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> v<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
      <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">../views/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>v<span class="token punctuation">.</span>component<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">//这儿不能使用@</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;/index&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>router<span class="token punctuation">.</span><span class="token function">getRoutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">//动态添加路由后，如果网页刷新空白，可以再main.js里new vue({})中加入</span>
<span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    store<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&#39;addMenu&#39;</span><span class="token punctuation">,</span>router<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="统一定制路由-api" tabindex="-1"><a class="header-anchor" href="#统一定制路由-api" aria-hidden="true">#</a> 统一定制路由 api</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//data.js</span>
<span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getMenu</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">params</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> axios<span class="token punctuation">.</span><span class="token function">requset</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;/menu&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">data</span><span class="token operator">:</span> params<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getMenu</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">params</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> axios<span class="token punctuation">.</span><span class="token function">requset</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;/menu&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">data</span><span class="token operator">:</span> params<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="nprogress-页面顶部加载条" tabindex="-1"><a class="header-anchor" href="#nprogress-页面顶部加载条" aria-hidden="true">#</a> Nprogress 页面顶部加载条</h2><p>cnpm install --save nprogress</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//进度条颜色</span>
#nprogress <span class="token punctuation">.</span>bar <span class="token punctuation">{</span>
    z<span class="token operator">-</span>index<span class="token operator">:</span> <span class="token number">9999</span><span class="token punctuation">;</span>
    <span class="token literal-property property">background</span><span class="token operator">:</span> #48AD98<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//router.js 文件内输入</span>
<span class="token keyword">import</span> NProgress <span class="token keyword">from</span> <span class="token string">&#39;nprogress&#39;</span>
<span class="token keyword">import</span> <span class="token string">&#39;nprogress/nprogress.css&#39;</span>

NProgress<span class="token punctuation">.</span><span class="token function">configure</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">easing</span><span class="token operator">:</span> <span class="token string">&#39;ease&#39;</span><span class="token punctuation">,</span>  <span class="token comment">// 动画方式</span>
  <span class="token literal-property property">speed</span><span class="token operator">:</span> <span class="token number">500</span><span class="token punctuation">,</span>  <span class="token comment">// 递增进度条的速度</span>
  <span class="token literal-property property">showSpinner</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 是否显示加载ico</span>
  <span class="token literal-property property">trickleSpeed</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token comment">// 自动递增间隔</span>
  <span class="token literal-property property">minimum</span><span class="token operator">:</span> <span class="token number">0.3</span> <span class="token comment">// 初始化时的最小百分比</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

router<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">//beforeEach是router的钩子函数，在进入路由前执行</span>
  NProgress<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>to<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>title<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//判断是否有标题</span>
    document<span class="token punctuation">.</span>title <span class="token operator">=</span> to<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>title
  <span class="token punctuation">}</span>
  <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//执行进入路由，如果不写就不会进入目标页</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

router<span class="token punctuation">.</span><span class="token function">afterEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 在即将进入新的页面组件前，关闭掉进度条</span>
  NProgress<span class="token punctuation">.</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">//或 axios.js 文件内引入</span>
<span class="token comment">// http response 拦截器</span>
axios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>
  <span class="token parameter">response</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> response<span class="token punctuation">.</span>config<span class="token punctuation">.</span>nprogress <span class="token operator">!=</span> <span class="token keyword">undefined</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>response<span class="token punctuation">.</span>config<span class="token punctuation">.</span>nprogress<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 发送axios请求时 可以设置 nprogress=false 来设置是否需要进度条</span>
        NProgress<span class="token punctuation">.</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> response<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token parameter">error</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    v<span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;未知错误&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,20);function d(v,m){const a=t("ExternalLinkIcon");return e(),o("div",null,[r,n("p",null,[n("a",u,[c("掘金文章"),l(a)])]),k])}const g=p(i,[["render",d],["__file","Vue3.html.vue"]]);export{g as default};
