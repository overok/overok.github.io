import{_ as n,o as s,c as a,a as p}from"./app-dc634640.js";const t={},e=p(`<h1 id="es6" tabindex="-1"><a class="header-anchor" href="#es6" aria-hidden="true">#</a> Es6</h1><h2 id="数组合并" tabindex="-1"><a class="header-anchor" href="#数组合并" aria-hidden="true">#</a> 数组合并</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//数组合并</span>
<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> c <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>a<span class="token punctuation">,</span> <span class="token operator">...</span>b<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token comment">//[1,2,3,5,6]</span>
<span class="token comment">//对象合并</span>
<span class="token keyword">const</span> obj1 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span>
<span class="token keyword">const</span> obj2 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span>obj1<span class="token punctuation">,</span> <span class="token operator">...</span>obj2 <span class="token punctuation">}</span> <span class="token comment">//{a:1,b:1}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="拼接字符串" tabindex="-1"><a class="header-anchor" href="#拼接字符串" aria-hidden="true">#</a> 拼接字符串</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//旧</span>
<span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token string">&#39;小明&#39;</span>
<span class="token keyword">const</span> score <span class="token operator">=</span> <span class="token number">59</span>
<span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>score <span class="token operator">&gt;</span> <span class="token number">60</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  result <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">的考试成绩及格</span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  result <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">的考试成绩不及格</span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">}</span>
<span class="token comment">//新</span>
<span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token string">&#39;小明&#39;</span>
<span class="token keyword">const</span> score <span class="token operator">=</span> <span class="token number">59</span>
<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>score <span class="token operator">&gt;</span> <span class="token number">60</span> <span class="token operator">?</span> <span class="token string">&#39;的考试成绩及格&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;的考试成绩不及格&#39;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="过滤空值虚值" tabindex="-1"><a class="header-anchor" href="#过滤空值虚值" aria-hidden="true">#</a> 过滤空值虚值</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token number">1</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>test1 <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">||</span> test1 <span class="token operator">!==</span> <span class="token keyword">undefined</span> <span class="token operator">||</span> test1 <span class="token operator">!==</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> test2 <span class="token operator">=</span> test1
<span class="token punctuation">}</span>
<span class="token keyword">let</span> test2 <span class="token operator">=</span> test1 <span class="token operator">||</span> <span class="token string">&#39;&#39;</span>

<span class="token number">2</span>
<span class="token keyword">const</span> myArray <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token number">NaN</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&#39;@denicmarko&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>myArray<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>Boolean<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// [1, 2, &quot;@denicmarko&quot;, true, 3]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="if-短路" tabindex="-1"><a class="header-anchor" href="#if-短路" aria-hidden="true">#</a> if 短路</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//旧</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>value <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">||</span>value <span class="token operator">===</span> <span class="token string">&#39;one&#39;</span> <span class="token operator">||</span>value <span class="token operator">===</span> <span class="token number">3</span> <span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token comment">//新</span>
<span class="token number">1.</span><span class="token function">if</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&#39;one&#39;</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token operator">&gt;=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token number">2.</span><span class="token function">if</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&#39;one&#39;</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token comment">//旧</span>
<span class="token keyword">if</span><span class="token punctuation">(</span> type <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">||</span> type <span class="token operator">==</span> <span class="token number">2</span> <span class="token operator">||</span> type <span class="token operator">==</span> <span class="token number">3</span> <span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token comment">//新</span>
<span class="token keyword">const</span> condition <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">if</span><span class="token punctuation">(</span> condition<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token comment">//旧</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span> isOk <span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token function">go</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">//新</span>
isok <span class="token operator">&amp;&amp;</span> <span class="token function">go</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">//旧</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span> name <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">||</span> name <span class="token operator">!==</span> <span class="token keyword">undefined</span> <span class="token operator">||</span> name <span class="token operator">!==</span> <span class="token string">&#39;&#39;</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">let</span> fullName <span class="token operator">=</span> name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//新</span>
<span class="token keyword">const</span> fullName <span class="token operator">=</span> name <span class="token operator">||</span> <span class="token string">&#39;buddy&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="输入框非空" tabindex="-1"><a class="header-anchor" href="#输入框非空" aria-hidden="true">#</a> 输入框非空</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//旧</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> value <span class="token operator">!==</span> <span class="token keyword">undefined</span> <span class="token operator">&amp;&amp;</span> value <span class="token operator">!==</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
<span class="token comment">//新</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>value <span class="token operator">??</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="对象属性值" tabindex="-1"><a class="header-anchor" href="#对象属性值" aria-hidden="true">#</a> 对象属性值</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//旧</span>
<span class="token keyword">const</span> name <span class="token operator">=</span> obj <span class="token operator">&amp;&amp;</span> obj<span class="token punctuation">.</span>name
<span class="token comment">//新</span>
<span class="token keyword">const</span> name <span class="token operator">=</span> obj<span class="token operator">?.</span>name
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="并发请求-promise-all" tabindex="-1"><a class="header-anchor" href="#并发请求-promise-all" aria-hidden="true">#</a> 并发请求 Promise.all()</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">fn1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">fn2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token comment">// [1,2]</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15),o=[e];function c(l,i){return s(),a("div",null,o)}const r=n(t,[["render",c],["__file","Es6.html.vue"]]);export{r as default};
