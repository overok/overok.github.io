import{_ as n,r as i,o,c,b as e,d as a,e as t,a as d}from"./app-dc634640.js";const l={},s=d('<h1 id="前端-new-技术" tabindex="-1"><a class="header-anchor" href="#前端-new-技术" aria-hidden="true">#</a> 前端 new 技术</h1><h2 id="vite-webpack" tabindex="-1"><a class="header-anchor" href="#vite-webpack" aria-hidden="true">#</a> vite/webpack</h2><p>vite 依然只适合在个人项目 或 小型项目 上进行实践。 当您需要构建企业级应用时，最好的做法依然是“回到 webpack 身边”，直到下一个“webpack 杀手”出现。</p><h2 id="微前端" tabindex="-1"><a class="header-anchor" href="#微前端" aria-hidden="true">#</a> 微前端</h2><p><code>微前端</code> 就是 <code>iframe</code> 的升级版</p><ul><li>“微应用”要解决的最核心的问题是什么？</li><li>越来越庞大的“巨石应用”难以维护，开发成本会不断增大。</li><li>当技术栈升级时，应该如何让存量代码能正确在“新架构下”运行？</li><li>如何实现“大型企业级”项目的状态共享与业务拆分。</li></ul><h2 id="valine" tabindex="-1"><a class="header-anchor" href="#valine" aria-hidden="true">#</a> Valine</h2>',7),h={href:"https://valine.js.org/quickstart.html",target:"_blank",rel:"noopener noreferrer"},_=e("h2",{id:"docker",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#docker","aria-hidden":"true"},"#"),a(" docker")],-1),p={href:"https://xiaoman.blog.csdn.net/article/details/126375948",target:"_blank",rel:"noopener noreferrer"},u=e("img",{src:"https://www.aoyingtech.net/upload/mt360/img/code/code-6.jpg",style:{"border-radius":"10px"}},null,-1);function f(k,b){const r=i("ExternalLinkIcon");return o(),c("div",null,[s,e("p",null,[e("a",h,[a("评论组件"),t(r)]),a("👨🏻‍💻")]),_,e("p",null,[e("a",p,[a("docker 碰撞 vue3"),t(r)]),u])])}const w=n(l,[["render",f],["__file","NewTechnique.html.vue"]]);export{w as default};
